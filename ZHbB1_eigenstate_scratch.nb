(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    248464,       4532]
NotebookOptionsPosition[    247140,       4503]
NotebookOutlinePosition[    247545,       4519]
CellTagsIndexPosition[    247502,       4516]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This notebook explores the composition as a function of space of the primary \
dressed eigenstate in the bubble condensate.

Requires bubble-4a-murphree.nb to be run.\
\>", "Text",
 CellChangeTimes->{{3.809970245021641*^9, 3.809970273004247*^9}, {
  3.809970723483919*^9, 
  3.8099708294713373`*^9}},ExpressionUUID->"5fda75c9-e3e6-426a-876a-\
3e2c8fae0e32"],

Cell["\<\
First examine the energies and eigenstates of the trap without dressing. The \
highest energy state is |2,2>, then next highest |2,1>, and so on; this \
allows us to label our states.

Problem assigning eigenvector and eigenvalue consistently. Could be done by \
hand for a discrete plot, e.g. ListPlot, by making sure that the eigenvalue \
and eigenvector components change smoothly over the range.\
\>", "Text",
 CellChangeTimes->{{3.8099708430544586`*^9, 3.809970883821287*^9}, {
  3.809970941662881*^9, 3.8099710055955067`*^9}, {3.8099717125591946`*^9, 
  3.8099718383989167`*^9}},ExpressionUUID->"94655b57-40db-4c65-9ed7-\
b6b7b98fad14"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"AdiabaticEnergiesChipC2All", "@@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"(*", "\[CapitalOmega]c", "*)"}], "0"}], "}"}], "~", "Join", 
    "~", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"z0", "[", 
       RowBox[{
       "CurrL", ",", " ", "CurrZ", ",", "CurrH", ",", "Bx1", ",", "By1", ",", 
        "Bz1"}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ")"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"AdiabaticVectorsChipC", "@@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"(*", "\[CapitalOmega]c", "*)"}], "0"}], "}"}], "~", "Join", 
    "~", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"z0", "[", 
       RowBox[{
       "CurrL", ",", " ", "CurrZ", ",", "CurrH", ",", "Bx1", ",", "By1", ",", 
        "Bz1"}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ")"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.748533800194627*^9, 3.748533800925632*^9}, {
   3.8099668663081274`*^9, 3.8099669036829615`*^9}, {3.809966990370676*^9, 
   3.8099670171915984`*^9}, {3.809967075602934*^9, 3.8099671814572816`*^9}, 
   3.809967584785925*^9, {3.809970896579101*^9, 3.809970912989505*^9}, {
   3.8099710173262515`*^9, 3.809971053837263*^9}, {3.8099711740602007`*^9, 
   3.8099711812781534`*^9}, 3.8099712240130634`*^9, {3.8099712566564045`*^9, 
   3.8099712577594724`*^9}},
 CellLabel->
  "In[591]:=",ExpressionUUID->"d1562100-db9d-41cc-8de7-0c6cc15a205d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "6.970519001269817`*^6"}], ",", "6.970519001269817`*^6", ",", 
   "3.4906070746746063`*^6", ",", 
   RowBox[{"-", "3.47990098600626`*^6"}], ",", "7137.383128643036`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8099670852615857`*^9, {3.80996711527487*^9, 3.8099671314276505`*^9}, 
   3.8099671836276875`*^9, 3.809967586111088*^9, 3.809967672884967*^9, 
   3.809970915211631*^9, 3.8099710651423573`*^9, 3.809971184800064*^9, {
   3.8099712455123463`*^9, 3.8099712593754635`*^9}},
 CellLabel->
  "Out[591]=",ExpressionUUID->"e6edce46-943d-4397-b847-9d66a88a6e94"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8099670852615857`*^9, {3.80996711527487*^9, 3.8099671314276505`*^9}, 
   3.8099671836276875`*^9, 3.809967586111088*^9, 3.809967672884967*^9, 
   3.809970915211631*^9, 3.8099710651423573`*^9, 3.809971184800064*^9, {
   3.8099712455123463`*^9, 3.809971260454589*^9}},
 CellLabel->
  "Out[592]=",ExpressionUUID->"eb841d1f-2b75-42f8-9f26-54176c5ac25c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stateLabels", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<-2\>\"", ",", "\"\<-1\>\"", ",", "\"\<0\>\"", ",", "\"\<1\>\"", ",", 
     "\"\<2\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stateColors", "=", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Orange", ",", "Yellow", ",", "Green", ",", "Blue"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ourState", "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.809971294416703*^9, 3.809971352957778*^9}, 
   3.8099714519342346`*^9, 3.809971506351673*^9, {3.80997159009571*^9, 
   3.80997162043256*^9}, 3.8099716523821726`*^9},
 CellLabel->
  "In[649]:=",ExpressionUUID->"bae606ac-357c-4fae-926e-950d6393dc94"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"offsetTemp", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"widthTemp", "=", "75"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minTemp", "=", 
   RowBox[{
    RowBox[{"z0", "[", 
     RowBox[{
     "CurrL", ",", " ", "CurrZ", ",", "CurrH", ",", "Bx1", ",", "By1", ",", 
      "Bz1"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"AdiabaticVectorsChipC", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[CapitalDelta]1", ",", "\[CapitalOmega]c"}], "}"}], 
              "~", "Join", "~", 
              RowBox[{"(", 
               RowBox[{"minTemp", "\[LeftDoubleBracket]", 
                RowBox[{"1", ";;", "2"}], "\[RightDoubleBracket]"}], ")"}], 
              "~", "Join", "~", 
              RowBox[{"{", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z", "*", 
                  RowBox[{"10", "^", 
                   RowBox[{"(", 
                    RowBox[{"-", "6"}], ")"}]}]}], "+", 
                 RowBox[{
                 "minTemp", "\[LeftDoubleBracket]", "3", 
                  "\[RightDoubleBracket]"}]}], ")"}], "}"}]}], ")"}]}], ")"}],
           "\[LeftDoubleBracket]", 
          RowBox[{"ourState", ",", "#1"}], "\[RightDoubleBracket]"}], "^", 
         "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "offsetTemp", ",", 
          RowBox[{"offsetTemp", "+", "widthTemp"}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "#2"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "#3", "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<z [\[Mu]m] (origin at trap center)\>\"", ",", 
           "\"\<Rel. population\>\""}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", "5", "]"}], ",", "stateColors", ",", 
       "stateLabels"}], "}"}]}], "]"}], "\[IndentingNewLine]", "~", "Join", 
   "~", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "^", "2"}], "&"}], "/@", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"AdiabaticVectorsChipC", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[CapitalDelta]1", ",", "\[CapitalOmega]c"}], "}"}], 
             "~", "Join", "~", 
             RowBox[{"(", 
              RowBox[{"minTemp", "\[LeftDoubleBracket]", 
               RowBox[{"1", ";;", "2"}], "\[RightDoubleBracket]"}], ")"}], 
             "~", "Join", "~", 
             RowBox[{"{", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"z", "*", 
                 RowBox[{"10", "^", 
                  RowBox[{"(", 
                   RowBox[{"-", "6"}], ")"}]}]}], "+", 
                RowBox[{
                "minTemp", "\[LeftDoubleBracket]", "3", 
                 "\[RightDoubleBracket]"}]}], ")"}], "}"}]}], ")"}]}], ")"}], 
         "\[LeftDoubleBracket]", "ourState", "\[RightDoubleBracket]"}]}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "offsetTemp", ",", 
        RowBox[{"offsetTemp", "+", "widthTemp"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Gray"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Total\>\"", "}"}]}]}], "]"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQvWxVxL33SW8c55pseQiiJb7ueQqiI7L/fAbR23IV
f4Pohrb6/yCaZedc3g9AmuHCDwkQfetbjSyIFmsR0wDRj86s1wHRepd4bUB0
mBSDB4i2mdjoA6Lf3AwIAtHrrj4NBtH3zstHgOg0vY4oEG27cmYiiC7otcsF
0SlLxIpB9J47FnUguuPHn3YQnbGbswNEX5r5egKIbvp3cBaI1mn8swAs/6Zu
BYiesL1oLYjOKb+yDUT7xf8U+Aik1V5MFgXRExxi80D0tInrwXQBr34xiH6j
KlsOom2iLetB9KKI5AYQfWm78RQQrWJTBqYvRacvAtGTDvosBdEA0y2/+g==

  "],
 CellLabel->
  "In[652]:=",ExpressionUUID->"6f6d08b6-4edc-466a-8cf5-45a0d468716e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$679154#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]], 
          LineBox[CompressedData["
1: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
sgENXICqY7Ut9j9tSroy
           "]]}, 
         Annotation[#, "Charting`Private`Tag$679209#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 1, 0]], 
          LineBox[CompressedData["
1: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
y4ZR0al/VsENX23RVt4hsmz4P+5lopU=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$679264#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          LineBox[CompressedData["
1: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
eAP9DxRQses=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$679319#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1: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
NErvVzYHBsXOr2A7uBN77OkKm/8H7qsc1g==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$679374#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAIAmIQ/fvbNR4GBk8HRgYQ+GC/bVLoTvM4T4f/YPDevkDv
Smr+Hk8HBqi8j+DdhB0dXnB+fivbrnJ3b4d/UPVPXswzqmTygcsf+O7kG3LW
B27+JfelnH+1feHyj6ezH1va5QvXv2JvfrD1RwQ/9/H1BxfC/eB8TzlxaTtF
f7j7cl6VbVa8i+D/MvhYlh8SADc/ydTcuXNzANz+4o0m8kcEAuHy5swWZ16X
BsL1z5/rvcLvSiDcvt28qaHzrILg6uu/mgrxz0fwn6uK/9v1B8Fn1vm3Kzgp
GG7eoaqvy9QPBsPNM53/KfmFeghcfaD1coNTPQi+gEKOzvNXCH7zLbOfHwJC
4e7ni1Epn9wQCpefeVfwq+mGULj5eYV5qoqbEepdWE+H8mxDyH/Qadn2aDdC
v0fNt/L+4wj+D6nbv17cQ/AjIpYwzOENg/NPr7C5+64oDG7+Q8enL2ouIuRX
b5h89Lt5OJwvN/3nxslzEHyTY/lns34h+DNPrD3soxsB5/879XqnXkKEw1+o
e7d+3Oi+rj8CEd8SFVd190c4MMHc+0vy9d63CPXNd3cz+MlEwt3nW8H6N6oR
wWfJ2iRUvyESbt7u6HiNxfcRfB+L/mV7haLg6u+I7Fe54Yrg7xMtt5pQGgVX
v1BMP8BjaRTc/fwTwrpvMkXD1Rvcb54enoHgfy07eEngOIK/UffxjeRf0XD9
uU9Y7m/TjYHHF9OFkt+e+jFw+6btfiJ+1wDBPzDpSACzSQxcv5BjyyF/KwR/
21zmZS/cEOr/hTHlSiUg5PtO/v9VOwlhX/B3LreGDwg+f6XwlXLlWDj/9C/p
pPywWLj7by5Y087SFgs3/7mb7dqZWxH8hPgZEs4HEfwb5Z+b35yJhdt/asXK
KPsnCPPXcIlxPBWKg8dnRjirXKNrHFy9ypIvxrIVCL6RaM7DsOVxcPc4tD3u
m3ANIX/xaH/mmw9xcPuTWG1cPLjj4fKfXF7ILVGNh+tvbpny8799PNw9AN6k
Uao=
           "]]}, Annotation[#, "Charting`Private`Tag$679429#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {50.000001530612245`, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {50.000001530612245`, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Rel. population\"", TraditionalForm], None}, {
        FormBox["\"z [\[Mu]m] (origin at trap center)\"", TraditionalForm], 
        None}}, FrameTicks -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"-2\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"-1\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"0\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"1\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"2\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Total\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                    "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.809969006309151*^9, 3.8099690603623805`*^9, 3.809969094984561*^9, 
   3.8099691408411026`*^9, 3.8099692191584177`*^9, {3.809969317542224*^9, 
   3.809969368540065*^9}, {3.8099694606302614`*^9, 3.809969478541553*^9}, 
   3.809969546278175*^9, {3.809969582991356*^9, 3.8099695954424834`*^9}, 
   3.809970351526244*^9, 3.8099710688433666`*^9, 3.8099711316469183`*^9, {
   3.8099712054466476`*^9, 3.809971251236842*^9}, 3.8099713662905025`*^9, {
   3.8099714592946696`*^9, 3.809971511945407*^9}, {3.8099715942052307`*^9, 
   3.8099716243766456`*^9}, 3.809971657185628*^9},
 CellLabel->
  "Out[655]=",ExpressionUUID->"97a11d2c-9bd4-48b3-aa29-2e36bf59ed15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"offsetTemp", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"widthTemp", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minTemp", "=", 
   RowBox[{
    RowBox[{"z0", "[", 
     RowBox[{
     "CurrL", ",", " ", "CurrZ", ",", "CurrH", ",", "Bx1", ",", "By1", ",", 
      "Bz1"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"AdiabaticVectorsChipC", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[CapitalDelta]1", ",", "\[CapitalOmega]c"}], "}"}], 
              "~", "Join", "~", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "*", 
                 RowBox[{"10", "^", 
                  RowBox[{"(", 
                   RowBox[{"-", "6"}], ")"}]}]}], "+", 
                RowBox[{
                "minTemp", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], "}"}], "~", "Join", "~", 
              RowBox[{"(", 
               RowBox[{"minTemp", "\[LeftDoubleBracket]", 
                RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}], ")"}]}], 
             ")"}]}], ")"}], "\[LeftDoubleBracket]", 
          RowBox[{"ourState", ",", "#1"}], "\[RightDoubleBracket]"}], "^", 
         "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "offsetTemp", ",", 
          RowBox[{"offsetTemp", "+", "widthTemp"}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "#2"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "#3", "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<x [\[Mu]m] (origin at trap center)\>\"", ",", 
           "\"\<Rel. population\>\""}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", "5", "]"}], ",", "stateColors", ",", 
       "stateLabels"}], "}"}]}], "]"}], "\[IndentingNewLine]", "~", "Join", 
   "~", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "^", "2"}], "&"}], "/@", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"AdiabaticVectorsChipC", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[CapitalDelta]1", ",", "\[CapitalOmega]c"}], "}"}], 
             "~", "Join", "~", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"(", 
                  RowBox[{"-", "6"}], ")"}]}]}], "+", 
               RowBox[{
               "minTemp", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}], "}"}], "~", "Join", "~", 
             RowBox[{"(", 
              RowBox[{"minTemp", "\[LeftDoubleBracket]", 
               RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}], ")"}]}], 
            ")"}]}], ")"}], "\[LeftDoubleBracket]", "ourState", 
         "\[RightDoubleBracket]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "offsetTemp", ",", 
        RowBox[{"offsetTemp", "+", "widthTemp"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Gray"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Total\>\"", "}"}]}]}], "]"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.809969626290466*^9, 3.809969655665276*^9}, {
  3.8099697123543124`*^9, 3.809969722977745*^9}, {3.80996978222335*^9, 
  3.80996981619362*^9}, {3.8099698704809465`*^9, 3.8099698938423057`*^9}, {
  3.809969937152556*^9, 3.8099699429447145`*^9}, {3.809970050106982*^9, 
  3.8099700740507298`*^9}, {3.80997011683394*^9, 3.8099701776018972`*^9}, {
  3.809971412193535*^9, 3.809971431916548*^9}},
 CellLabel->
  "In[602]:=",ExpressionUUID->"83fd1dea-a39d-4c60-b0bb-4c054b364010"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
lYYGxtLJbR6WEMi25fVCThoSeunpLutnCcySRXex9jRUYMJznTvCEl5KsR8Z
2JmOWtN0y2sfW0JwP9/lrWnpiPlMJ59wNxHPXD7uZOdTdJElVSRm0BIW5PcP
vfr1FCUMuh1fG7UE0+PUgpwDGUgkgFulc9YSCq93mxS6ZyCsUds7eKsV1DON
6F4VeIZ8Td53f5Gzgji/Vqbj/plo5lprfNoTK2DWmu7gvZOD8huT8+nPrEAk
7l0GtOUg1x22LSjfCtoVgXOFIRctPf21ZbjCCt68VZhYd8lFa62HfXi6rYAz
Wv9PlnYeYtkTZBHGbA1GN680MUsWoGaShn8XuzW4/9Tz93IsQNH5fHcO7LQG
Tz+x6IicAsQJ+R9eCVqDwjG+xIdihWiX/ZDiTxlrcPubpdokVYQOlkqLURys
weuDgtX6i+doYnNTpcTNGhi3MfQ39z9HmeqtJEYfa/homCG9/uc5EhuxSXkU
ag0rDxZ9otVeoFNMcdz9D60ha3L/bNjXFwjTnV5R7bCG7niesX8nS1CBj7Zt
0h4bOFCqmqV1pAz1PJK8ELHfBsSd39TkGZah3+/YpXwO2MBG2f62G5FlSIW3
icHkiA00j7Z+a/tehj4V4an7pGyA92ukXVJZOeL8fupzuroNsb/dEpXrWImk
d3A3JV60gYqVnNG2p5XIVHa+MFzbBpx16EbXP1WiZxE5gVQDG7j3LEJrWK8K
oYMHhcRtbGBGPlVzj8or5GLOa/nC1wYK3ipy91x4jRJDl5TTr9iAPxsL5UHs
a1SZ80EyMcAG1osYK4S6X6Otazc3vMNsIELt2pi9ZQ16lMScIhdvA7Hf1pgV
AmrR+/crw7WZNlDm3XFNbLkO/fjZ8+Z5jg1IlhfWxu6tR3v2F+em5dvAvy0c
FRSlekRxdL0SVmwDk+HxLT536tFflm971GpswOh5ab664ht0HAZNOvpsoNKh
dWV38VvEcAfL2hy0gXb9C7wJU29R72zGyokRG+Dxe9JdvO8dunbXIyF+3AYa
M09++xn1DrUusLfr0In+an3wrqc1IOojhPew2cJQyDpnp1YTOvfjaSwThy28
L3m6fSO2CXFeYB+R5raFzGRruz8dTejlz36/JD5b4NirWhqs34yYNN2LDQ/a
gjyf9iKDfQtKXU8/MnjeFmget0s+V7Uhb51t3my4LXSabTEY3NaO1DLd3sgp
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
4bDwpN//aj2hY1rwZj7h/wFrp0Rt
           "]]}, 
         Annotation[#, "Charting`Private`Tag$666368#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]], 
          LineBox[CompressedData["
1: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
Zm5/3WMOadZhdJRvMsjg/iojq5I5FCTHxG/HHUXP1OhmAjPN4Vn1QcH6CVlk
d7GN0zbHHOLH1jos/8gimqfxmmr55iCdJGa5Z68cMhZnzGcqNwfDTnGzMQE5
9IP5gGVxszlUZk6myBvKIf4RnjcDK+YQFjR8Qb9CDsUFH717yuQcXKLcM/gS
JI+uMlHl3rE8B0m/ig9vRcmjhKKebFqHc7Bd6JAimS6PUj4GJr13Pwe7Vuei
6h/Ko6yjdSEu0eegtMj3+/NpeVQ4pWOY8PwcjEl9enTY6RhqtHD+85nPAnLY
+dvv2h9HTfPH1tFhCxgXV/gt5n0cvY6mXS6UtIDWdA2f5rDjqLXq/pTXCQsY
Vl9/cCr/OOpiXuihNrGAKNvQ/UcnjqPh1gslEtEWkPaf5bS2rwLaUMo8d/6H
BVxuKbgFOYooUMvZuWnJAqS9//BYVyiiJbOjXnQbFlDOK5We0KSIpn3borNo
LKH2k/eek98V0VDp1pPHvJZwbPKIV5uiEqrnJ7L+MLQEvawtp/4BJRSxR+mD
zRNLmLv35+tnOWW0zU4zfPeFJTjctP3lqqOMLoh0T003WoLb3qXrjA7KyB/c
t4M7LWEpPFyuNlEZES7clsmYtATZuEmXpGllpL2wJ+kdlxU0+Z+sPlVyEu37
NKCreskK1i5f+aehpoJYZ7LouCKtgGDg9lXZRgVxb5m1LsdZgZd/lo9hgAo6
ItytcT/DCqyP1VFG7qkg8G5DrGVWsLfqSGI8oyoK3PNCYfqzFVA+XKey+qqK
RpRyBDNPWAN1a/JHi0KEvulZffE+bQ00vMQPXU0Izdhx3tbTsAal+CPNnqMI
rUemH/pnaA0oJyRbhAej/R8SON1J1nDLUl7lUgZGWuSLjJBlDVEZM90MOoAe
XrfbnF2xhg9f2ZUCTNXQfnqpaK1f1pDwdp3Kh6iG/EN/sdz5Zw3GhYnNcaFq
SNE6W8yU0QaUUoL3HLijhup5ui1qRG2AaS7zwtV5NdSRp/E02soG/GOUCKqp
6miqUNKfr8EG5H9yN9gtaCBd9l9/g1ts4Gfkj9uU3ZqoNPptfHeHDdwvohO8
yauJvIiEu1EDNnBbgp/P7Ywm+nnkdvfMkg3ohrX911mqiXaVHpB9JmILtD0r
bhO+Woi/cnPWMN4WXHlplMN5dRCDaI2k6jVb2CbmjvQo6aD1myFuElk7+m+N
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
IP4RLP5ta8MbLkeeCn/IFIgt0hNYj/3xhvElNUTZCsAy7YYBudQ+oPw1iuPg
UAAeURpQ8GP2gZdSnS2e2QH4FOv0cx5xHzjfUPfqFWsAXm/b2+Bl6wNPon8c
sTnojwXyZ9YzHHxg8YzI5B0Gf6wb0i5b6+wDMrvLDq3/8cM5ovF391B84LQv
VUbvqB9GkfQxdwJ9INdvg8/4nh+OVaE725PsA4f9o16pKPphroe0QwpNPvD+
l+NubSdfDDETrLbNPiD1+9Skj5kvdrdrORPR6gNnrU+m39f2xfUM0S+7On2g
oSWODmR8sROZ5i7p847/oC8FR9Z9cIngLsqNFR/wMM9+Qjrmg3Pb//2+zOoL
FzRrjjS89MJm61K062y+kBk7u/aqxAsziFgxeXP4wvW6g/uGMrxw6KVKAQdu
X0j786FA290Lm8s6ayJ+X9jmtu5h5vbCTFmvk7cldvjs2kWtEE8c5hQjGK7m
CwRF3nvlGh7YeYNB+4qvL3SGBrdUsbhhb5WLu7j9feFVH5VN1V8KvhQ+2/Ao
wBfihKQzm2cp+AZd54kvwb7wZ2wqj6eNgru5kiXQZV+4J7RScCOCgrEyC9NW
vC+Q0/obX22QMd95tr6QQl849FtG/OQSCX/+fcjF59OOds47WchExAxXdPfN
DfgC/wf5FWcqIj61O6ia8tkXHojP00ivEnAOy/s9LiO+4PhCjPrbIAHbHb5S
Zv7NFy4xfmHoKyLgrwYTP08u+EJGwlzPG0TA3/PL42j3+EFjHXBdu+CK17RP
V9xU9IMXg98sHFlcMG1pyRDzCT9gOPr29EdaF8zOxE4frewHZdo8Vwx+O+Nj
vT9cvFX84FeDwZrdpDP2drzBraHmB69y/ns+WueMp0JWo+bO+sHuvDhvkrsz
Hix5YIMJftCnOnvUqMsJ1zJw0k+m+0GmfDJ/j4kjFox5M30+c4eXs2dZQY44
9l9gO3O2H1SyWzgKSzti05+9Cco3/SCiaXqkco8jnvkvjSnpjh88dJ7PjKp3
wNyPmdiOl/sBWUPTfUXSAQdb7uaPeOMH/1bOCSez2uNjRT+P8236wZHPyW3l
e21xraMT9fVffvDTe1VS9Y8N1jjU+X7/Hz/QY36z0j9ng83TC91ot3fqcRUl
iXfb4OArpndmafzhyr5TY7rXbfALu0qGWhZ/YCibXPQSs8HA4TlmIeYP47V5
LQxG1tgwdjwl1cJ/59oXBj1/YYl19FPOKln5wx3/P5ePl1tiYD7JMGLtD12O
KV9f3LbE8tkpMWL2/vBzXDxpMsoSsxefvNTg6g/loUyk54aWePjNNbc5X394
JUpKV52ywJTdqpq6if7AddIhMYHXAju3T1EvJPlDgpaQEt5vgW2S0xozUvyh
v6GF+S+NBT7L8f3UlzR/uKa2cCRz9hyWFU2XD77hD0PWldSydefwuuY0f9E9
f1iPfLjJYncOL9JnjOjd9weVBKcoM+NzeLrzdM5iiT8YFro8vaN5Dn82z+BQ
KfeHGj3qRROZc7iegBg/VvnD3TWdQd5/5vip+Ex7SLU/WJGG64tWzfHDuYw4
vmf+YHKFaq/itDnOD5zZ5fbCH1xbX9d495jjm8qZTcx1/kBNP8TI3WqO07dQ
WHW9P5BzLzxorzXHCU0zKjYN/uB4dDU26pE5jorO/PWv0R88owrztIrM8f8A
G9RH8g==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$666423#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 1, 0]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$666478#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$666533#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1: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
qs1vc6igVkI6pN1zEKvCfutVFVLhXaKOurOLJtbFfSSyoJgK1Q/mknZVamBj
g3daU8uosGnDxRC3TRqYxKUTR688pMJ/g4LnnjSqYfHVz8z1n1PBOtPwziP6
fsz6Uc7iuSYqrPex+3FqUBWTeHg1u+glFaTfr2f/bKKKVZUbT3K9JuKh8DV8
TEsFu1KqkIq9JeYzoCAmWquM6RdvBfo7KqSYfvwdra2M9d/9EP++nwryLHfH
59MVsZy8JxobB4nxUYuud7UCRs3J+KL+hQrs17I8ND7JY8sZLkrpI1T4fLOh
pUZDDtt1g9HpNE0FzH5WoRdJY38SuwOS5qggvJ73nWTcPqwyvkrsxSKRP9Vf
SfPf92K61y567/tHhbtNXKKOWVIYd7T99tPrPUFzcWtiOqsU9iECnsVs9ITi
gcqL2d6SGDmUbQuD0xNe1v8L8zDfg6kE/3kkzuMJx07wfex7JYEtXXltb8Hn
CeLp/2bOHpHAYi8klVUJeUJO6nuTYv3dWAVdzPSSlCfUm8XrlU+LYRe8WeZK
pT3BkJmStlVUDNOh/cgYkvOEwDTta+9MRbEeUvH4YVVPmORsDM5pFMYWHdRj
2XFP0Ce/md40IYQ12u04cEjHE8yalaTndIWwGJvlT556nvB4U8OW1hxBTMSy
Se7tUU84vf/xpmDKduyw6bGOFGtP8HqxmCynIIBxHFU588rWEzhsXTsU7/Fj
PYYCwn8dPCF9ps7hv738mIfuR6qduyfcu50Yc16JD4vR8uDY4+cJJg6p4tPk
rdiJg0aVJ896QsWObXZmqzyYiIa8TcR5T4i17vXLVObBylWni/4EekI2Z/W0
SgE39k4m0KjimifIRyVlh3ZxYF+LBtpL4jzhIVvTG3dVDowho2ZSmOgJW9Pf
JZmlbsY4ZMePZd4i/v9rWf7Chx07ImtzMjbPE/iDJLfrGbNhx4sf9UYWEOuT
rOHl0bYRc5LltQor8gT6NgOJ50c3YpdlW09fvO8JogrJGvWnWbEqWXVH8lNP
aHvj4JaZuh5rKk786vrME/zVmJukldZjXbITzo6NntDhcP2MfisLNiGb72b5
yhMegOvh/1hYsL1yfFTd955wO4cTfkv8QwdKvMbwD54wb3RTIevsKtKRa6Np
DXiCpcHc0aDXK8hBLthH9Ysn3OlYeHM0YhndkmP47xrzhH8er+zU9y2hghKj
eWGGJ7H/Ck9apP5FVXJ3zwlOecLbSB5qO9df1CVnd3HLgiewk8XCA/8tIHb5
9qDl9TTY2CuRenfzPNpeKsWyuJEGaamJi67Jc0hSPiR0hp0Gdkatw0Pic+iw
vGb46BYaKB8ObWmGWXRRviCmfycNKi9cehaQPY2iSlm4ekRpUMwTWqKDTaOb
8vbX3+6iQQe5br3x0BSqlBdIaNlLA5tjHt7vJKfQmHxoSpUqDWwF5fQKbzDR
Uunn7RVqNPj2pXh4/RQDsSscTC3RpMFK9LIwmwUDSSpMpudiNHjltC7snvAE
slNwyE4wpsHTpvffWAZGkTRFQ/aKKQ0yQ0tLho+Popn8rVUUcxqQM6kF+W//
oBiR5lc6ljSojfSei+v+jWo4pZmzzjTgVSorkJ77ia4asFwYdqPB2Ey68/Gr
P5FZ2Mf1nSQaJHqWt3zZ9hP9XIrdXuhFA8Fz0+oT+AjiH51Cpy/QAP97p862
/Dsakup4pXeZBkdmThyQMfuOip3zLVSDaPDb1oQ8PfUNwYClO2c4MZ9MdxZj
9A15tz6NrU+gAdfdmJBPf76i9oLwT7vv0UBK9OfCzT2f0c1vDu5bSmjAw/Ph
ynz6IHIW02QuldHAyF91q9C2QbSYMrq+5yEN3BXv27vyfkJ7w81kI57ToN7Z
R/iK9ACabpCu8msi5hMl1mJS1Y/ql1kwx5c0CFQ9Xu2p049O+ldZaHbQoJGe
Yubm3odCXHdcGP1AA+sHsyJjL3qRSdb0+r4BIh88t0d8du5FQp86YpsHaXC5
19+/YV0vKj8emJ3xjQYHAj+nKej2oMHD318dY9BAYEdYaszXd0hzV9n2hxu9
QGpxD1Od1IUexGzZ9IXdC6xG0IZcoS4kO+ezwMHlBT3/bkla3XqLRNpV+134
vKA0wpRrlNaJ1vnXpPGJe4GW5YX591qv0YWhHTGYhBcEZtUPZT3uQNOGly5S
pbyAG9yixA90oB+imG2TnBf0XpOSXlFvR22vmkX8NL3goP3QXLpNK9JRleLO
1PKCvD8yCZ5/XqG6jIiVNswLNDR+8QRdfIXKfY2Gdut5gdMp3RDtvBaUJPw2
q9vCCz7pcHU2cr9ENj4fJVQ8vcCfXX+vPWpC7we0+O29vcB78bArx1gjMtG9
syHa1wsmCkOszdMbEbbD6cfXc17gsa13JWylAUk0j9xNuOoFI8d4JA1LnqPb
CgY36yK9AN3Sm3EQe44EUu9F/I7xgpnk7KP7bjxDbF6eJEj0AjPpuNPJkfVo
dPuU9OQdL+BrsGOziX2KXEOO7xDJIeL7sqbvEv9TNDj2cLNhvhdgoY8bfmTU
os6GgNGsYi94o1Cw2+7xE1RJXS4xq/YCRbtzdTnra9ClZ5uU7ncR88+1y7Ne
qEKHSoYX898T8Wo4eKQprwot3nralP7BC2g+dUrpFlXI39fHMmLQC5zbCh9c
ePAQ0ST7rtj/9gLT3UcNIaQSyfI+MDgx5gVe6g4H3TQr0e+VGF4jhhf8GMG9
mycfIPc+7O6BWS8g2+sFirg/QA4xBa8513kD4/7vpDu2FUjkXPBNlg3eUDW2
V+qfcAX66GrjtLDRG0R49aWHa+8jS7Rl9hunN+j1Rd8dailHZpNnhWsFvWF/
3LTP/flSBJZ6VLKSN7gkN4/NlhWhVR3xAw6q3jDz7UXKWZMiVKf0d+WEmjd8
e8z9Lnb8HtLcXJaIa3lDYZsr7qJyD6nUCTzZbuANyebB8Ot1AZq8xwjlMvYG
445/r0+fK0DlKa0m6029oXIx/rP8ngIk63P568Rxb4g1Nvr9KfAukpD4seml
gzfUMpgF1Xr56OuWZ921zt6Q+Kv1UuRSHsr879btCjdvePnS7Up0RR4S7j2q
lEEl/h/h/LZlVx4SiHpoeSbAG9TOxBclcOWijYzQu7vjvKFlSYPNSDAb0TeP
9FomeoOz641HGhVZaFDSgC32hjd8n+RvWdmfhapsOUnz6d7wM4DFvvlwJnJr
S5buKPSGsWPF62TOZqCuH3PW60q8oTU9gvclWwbSXmcdrVbuDYuiy/Pq6bcR
v4bIaFYVMb8QB/uLLemoKT+/xL/RGyw3b4u/vT8NKTawDRa98IaihnUbWd6n
ovRPZK4vr7zByOHsg+UzqciXT8HLqJNYL4GcurTaW2hX8CNFsU/egMInnhWe
vokCbVsevJr1hmcLzdyUgWQ0GiD9bXmBmP/dDCP++GRkmRTDp/qfN7CzkVoZ
eslIoe3YmQwWHwgf3H9csjoJDar3HfDd4gNhJ4fPLxUkIsPjB90LeH3gWpvL
dKZ7Iqryup3yScAHLqf/qjGRSkTX8h3n9YR9IM52L/NBYQI6xPe7eqc00b9l
mtWcHo8KFIx/m8n5wDgrZ5z6ShziMyoVClf0AZLH+MrotTj0J4h+gXnAB2o+
xchnll9HqROLh14c9oHvt5/8O80ei+ZbNz/zsvWB0fBNS3/ZopF49p/5ZAcf
aOFWMF0sj0KG59qUap19YNqk+KmRdRRKl4rOYSP7gM0Or7a35ZEIC2UPz/L3
Abr5oux7agSK0Npk0n3dB/gO7b1mtfMqus/36+pCgg+oW0Pprt4w1P+npV70
hg+UF8V+YCSEIdnUCCVqug+wUHffjuYMQ52zG/k3FPoAp/6iiiFXKBIsZ/14
oMEHnjs6+2RoBiMI/8Fn2+wD1YN2ij9ZghHV7sXRkBYf4H77fWXmVhCq47ha
/+a1D8zwcrr/fBGInEgbcjwGfOBTRVdXqfIVdG/XenLqNDH/knHjOuOLqHth
OPvZHNH/MU9a98wFtNTZOPBj0Qcc9ey8dmdeQCZXQo6q/POBncwKN/v582iR
Fiw4spEO7bqqu15UnUMZbf+WrvDRYd/kfe7z7mfRiXk51nl+Oti939daJ3kW
ceyx5vbeRgfzMsP3fT/80fnLFeIOQnTYZru7/yrJH51UctbFxOhw40cUNyXg
DOJOabq+KkOH6tyMgqlqX/SikXEzQI4OiwGPOY3DfNFlxs5shjwdaF825pia
+aJRgzOVQ0p0KFpfMGnyh45alvb0PVOjw2nnAslxSToKdArfFXSYDvO9ZijR
1wupXX8gs6BDh1dUTr2bwl5o/MlnVR9dOsh87P9Z1kJDNvzqeo4GdDhEddvN
touGNFp+UnBT4n01JRPmhqhoUs7w4T9rOsg+clHriSGjQmv/unM2dJg1TOF2
1iUjh/Dsl0xbOlC3h6zvWCWh10OLfV8c6OCg6H9VNoCE7iUWLT93o4NmydEt
rd4eyHmBQz+YTof1N/+1i4e7IW+tS+uF/IjnzyiVnNZ3Q5eDxp7dP0OHpdEj
3u7sbih102uNLwF0uNMj8PxnnCvqErwug12hQ8nkrxX8rgvCNXm4l6PpECaS
ZTY+64RMLge1JV+jw7vxP9hCoxOyaWCGy12nw1Mjs6CieCcUYNi1apNAh4/Z
xUVL8k6o3Dpx8slNOlgVa4ruHnJAohf4e87l0UH3zfYRGzE7JFsflsBzlw5O
StJvzDtskSbLrElhAR1MY04lHb9gi05G97z8UESH4MC7Qp79Nig2LaVarYIO
6QoN72NzT6P/ngjenqmjQ0aEVFSeqxViX420uvaMDp3d8/p14lZou84i/54G
OtCzmEalg5ZItb0/9ngzsf6mDclspy0R9WNa4IM24vmc8h2nbE+hgSVhF58P
dMg68/My19UTiCPYkHO8jw4qPU8c1pufQIc2nq0iD9ChZrb7WbzICZTO08nm
MkiHA0ybcEr1cWQnGVxy8hsdvks9sf85Y4G+mv6YPcgg4lnYFBwaYY62vt+a
+ZhJB54DfzVFbc3RYWtksH+KDiPa7hYHlM1RrsvNNPlZOhR6bz6YV22G3M4Z
YuJLdCgTad6K+x5Dv7JLI1nZfGEfHn0ra4sJEto7oByyyRc4+9gyOVuOIsOS
jR9X2H2BcTwvSDfwKLr3yEF+gdMXGpk6PPxTxojavrX7D68vVPm9rf36xQgx
Zvx3vhX1ha6FEUWdrwZI7EJO81FxXyhXftfhkWeAzFbf0Fp3+cKVK/WZB0gG
qIJ93/PGPb7gXJQz0zypj/xEB1yrZHyhnTtF5BKnPprTR2Vpar7wzodyu8xe
FwlwC7Bf1STGn9lwYvjvEaT6ftTFW8sXmkNbfsukHkHejqlCRw77wkBWb2fb
Rx3089xM2LiJL1jVTnpsPHcYsWLtQx/MfKHmwse2TInDSII152DjcV/oywwI
mX0LyDHhGDPF2heKtZqTy5QA9d8rssHdfGF2xDgoixVD897Bj2RIviD4yHhz
5FmEBNSstgpQfeFbSFDoqT/ayLyRteW3jy/wblR09BjQQm0DjipJl3xh9Jt+
VsHAQVTLsZ19JMkXzq9sW9A6po4i/vm3bbnpC2k54SnrhtTQ8dn3MZppvtD/
r+urHF0N/fmcyB2b5Qs3xI1+X7l9AAk94ObfX+oL104+WLnJtR/9uEvrsbvv
C+aZm4u3lauiivSOlIhKYn12ZMYnWagig6vRQh9rfCG8yb/WOlMFBVhtFAt5
6QuLW8uEvpkqIx0Tty/Frb7AE9X/n8ayEtpyuDm7p8MXJPv7d644KqG7siF7
pN/5QnByjq2SiiLqWVmWfjvkC3PzUWYHF+WQav7sftFFX2B5MCTrySGNTibl
UVhXfcHvWSdvtvo+FBB8PGtsgx+sVFYrPKfuRU/sKjhqefxA5BK39/k/kuij
sSPkbPODPzGNly7sl0TLmlsCooT9QCa6DVO9ugfBNtqw5T4/IJ+i5j3VlEAu
G4QFMQU/eGy0e4AzYze6OtVmIrXfDy627Svi27gbvXqzr2YG8wPx/QWuDZ3i
6FjE97gESz/4ck1/OaxTGKncjAvfZ+8HZR/fl59u34kECg5efubqBzvqHeeC
unagTy/jKeN0PzjbuZTw768getZ7yCnsnB/IloQaRIgIotyREcudgX5gxzrX
W22wHZE3ausaXvODA6H+K/ceCyCTbb8OfUn0g7YFeuOTv/xISSpJJSDVD1i2
5ZgI6vKjed3fYvl3/eDWVZPCqxO8aOBk8jatUj8w4Nm6tN6EF9W5YVzvKv1g
8KPjq+KKrSjb/896yhM/sOQ2ktIS3orCrt74+++5H0yPDPKMb+dB/wOHGWuD

           "]]}, 
         Annotation[#, "Charting`Private`Tag$666588#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCwBWIQvTnsz9e3a2/a/QeD9/bha1NC3/WyO/yD8r+fbd31
plfcgZEBBD7Yp0SuXCawX8oBpv7SkzOTTD7IOjBA5a//7TS101SC8zeLXORt
69aA8wu0TS7stTaC88Xcv085KWwBN//zXvGsRVl2cPnWeDmJ6VpOcP6a3vhm
53hXOF+6MibnR4sH3L3LV94+21bi7fAXyj/X3rm9erEf3L07zgSUfOQPgOvv
unqHR/VcgAMTlL/27PUjszoC4fovHL1UI+AcBNcflXnzWjxvMFz/E54HBuuv
B8PltzmyvyyZEgLnt5fpLbQKDIX7b39Y4u+bsmGI8DWbElr5KgxuXyOb2fmo
zeFw87mvXfewqYmAm7duesyP158i4fJyG3689uuMhsvLvr46ex5LLFz+Vc2p
/oXz4+D2rS3zS5wimQCX13W4EXHuKoIvvDX308OFiXD1jruVX2UnJMHNP7jB
g9FCOhkR3oGVu+4+TYbrv9p86uLPRSlwflaievf7/FQ4P1Dvc7K6ZRqcX99z
f9bVL2lw80WmXS+OPZAOl/9g8GFVdF0GPPzkdpczzrHIRKSvD1y/tjJlwfX3
b98X4LY/C+6+S5p1nhu6s+HqY3TjFkzwyoHzLRTWim1mzYXzq/ex66+/kAu3
j/Vd01LFvjy4/LcTnPtyo/Ph8nNO/v9VK1QAl0/8zuXWUIDg3/wlnZR/DcH/
6ma7dqZpIZy/i0uM4+mkQrh5Rku+GMv+QMj7tT3umxBWBPdPBquNi0d3EVx9
c8uUn//3I/gA6VGzRg==
           "]]}, Annotation[#, "Charting`Private`Tag$666643#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Rel. population\"", TraditionalForm], None}, {
        FormBox["\"x [\[Mu]m] (origin at trap center)\"", TraditionalForm], 
        None}}, FrameTicks -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"-2\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"-1\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"0\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"1\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"2\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Total\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                    "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.809969809721712*^9, 3.809969818691884*^9}, 
   3.8099699466201324`*^9, {3.8099700522818193`*^9, 3.8099700772769804`*^9}, {
   3.809970122594741*^9, 3.8099701417664633`*^9}, 3.8099701805694475`*^9, 
   3.809971436288471*^9},
 CellLabel->
  "Out[605]=",ExpressionUUID->"85409072-d238-4dba-9c46-e93e003ff109"]
}, Open  ]]
},
WindowSize->{1428., 749.25},
WindowMargins->{{Automatic, 1152}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"66e0a6c9-9469-4f5d-a002-81146eb70b42"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 367, 9, 78, "Text",ExpressionUUID->"5fda75c9-e3e6-426a-876a-3e2c8fae0e32"],
Cell[928, 31, 652, 12, 100, "Text",ExpressionUUID->"94655b57-40db-4c65-9ed7-b6b7b98fad14"],
Cell[CellGroupData[{
Cell[1605, 47, 1575, 39, 47, "Input",ExpressionUUID->"d1562100-db9d-41cc-8de7-0c6cc15a205d"],
Cell[3183, 88, 620, 13, 36, "Output",ExpressionUUID->"e6edce46-943d-4397-b847-9d66a88a6e94"],
Cell[3806, 103, 940, 24, 32, "Output",ExpressionUUID->"eb841d1f-2b75-42f8-9f26-54176c5ac25c"]
}, Open  ]],
Cell[4761, 130, 738, 18, 66, "Input",ExpressionUUID->"bae606ac-357c-4fae-926e-950d6393dc94"],
Cell[CellGroupData[{
Cell[5524, 152, 4409, 113, 197, "Input",ExpressionUUID->"6f6d08b6-4edc-466a-8cf5-45a0d468716e"],
Cell[9936, 267, 115700, 2048, 255, "Output",ExpressionUUID->"97a11d2c-9bd4-48b3-aa29-2e36bf59ed15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125673, 2320, 4303, 106, 197, "Input",ExpressionUUID->"83fd1dea-a39d-4c60-b0bb-4c054b364010"],
Cell[129979, 2428, 117145, 2072, 254, "Output",ExpressionUUID->"85409072-d238-4dba-9c46-e93e003ff109"]
}, Open  ]]
}
]
*)

